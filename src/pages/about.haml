#navi
  %ul
    %li
      %a{:href => "http://www.esm.co.jp"}
        Home
    %li
      %a{:href => "http://ruby.agile.esm.co.jp"}
        RubyxAgile

#main
  #abstract
    %h1
      スクラムとは？
    %p
      段階かつ反復型（インクリメンタル ＆ イテレーティブ）のアジャイルソフトウェア開発手法の１つです。他のアジャイル手法と比べ、プロジェクト運営活動のみをシンプルに定義していることが特徴です。

    %image{:src => "images/scrum.png", :width => "95%", :hight => "95%"}
      #credit
        %a{:href => "http://www.mountaingoatsoftware.com/scrum-figures"}
          Image By Mountain Goat Software 
    %h2
      ロール
    %h3
      スクラムチーム
    %p
      テスター、プログラマー、データベースエンジニア、ユーザビリティ専門家、ドメイン専門家、ビジネスアナリスト等の役割の人々を
      まとめてチームとスクラムでは呼びます。
      ひとまとめにチームと呼ぶのは、共通のゴールである価値のあるソフトウェアをつくるために、それぞれの専門家が密に協力することを強調しているためです。
    %h3
      プロダクトオーナー
    %p
      機能(フィーチャ)を取りまとめ、優先度を最終決定する権限と責任を持つ人です。優先度の高い順に並べた機能リストであるプロダクトバックログを管理します。
    %h3
      スクラムマスター
    %p
      プロジェクトを円滑に進めることに責任を持つ人です。プロジェクト初期は、スクラム流のプロジェクト運営の維持に努めます。中後期は、チームメンバーの主体的な行動を引き出し、成果を生み出すチームづくりに貢献します。

    %h2
      スクラムの活動
    %p
      プロダクトオーナーが中心となって、優先順位付けされた機能リスト、プロダクトに関するすべての要望と、仕様変更のリストを作成し、維持します。この一覧リストをプロダクトバックログと呼びます。

    %p
      スプリント（2〜4週間のイテレーション）の開始時に、イテレーション計画のためのミーティングを開きます。プロダクトオーナーが優先順位付けしたプロダクトバックログを元に、スクラムチームがスプリント期間内に達成できるフィーチャーを選択します。選択した機能を実現するための作業を詳細化し、プロダクトバックログからスプリントバックログへ落とし込みます。スクラムチームは、スプリントバックログ上の作業を本スプリント期間中に完了することをコミットします。<BR/>管理者の作業指示でチームメンバーに作業を割り当てるのではなく、チーム自身がやるべき作業について話し合いコミットすることで、より深く作業内容について理解できます。このミーティングをスプリンントプランニングミーティングと呼びます。
    %p
      スプリント期間中は、昨日した事、今日やる事、問題点の３点のみを、短く報告し合うミーティングを毎日開きます。このミーティングは、日々の作業内容を設定し、また、進捗を妨げる問題を素早く発見し、取り除く機会を得ることで、チームが円滑に作業を進められるように手助けします。 このミーティングをデイリースクラムミーティング（朝会）と呼びます。
 
    %p
      スプリントの終了時に、作成が完成した機能を確認するミーティングを開きます。このミーティングは、スプリント期間中に作成した機能のデモを行う形式をとり、何を達成したかを確認します。PowerPointのスライドで行うことは認められません。ユーザにとって価値のある動作するソフトウェアで進捗を明確に把握するためです。定期的にデモで確認することで、必要な機能を後からでも発見できます。
      このミーティングをスプリントレビューと呼びます。

    %p
      スプリント終了時には、スプリントレビューの他に、ふりかえりのミーティングを開きます。ふりかえりは、日々の仕事の進めかたを話し合う改善活動の場です。スクラム自身は、開発の細かな仕事の進め方について、定義していません（例えば、チームで壁に付箋を貼って進捗を把握する、ペアプロを実施する、TDDを実施する、受入れテストを自動化するなどなど）。
      スクラムでは、ユーザ価値のあるソフトウェアをつくるために、具体的にどのように仕事を進めるかは、チームにゆだねられいます。チームの学習と成長がプロジェクト成功の鍵となります。ふりかえりは、このチームの学習と成長に促進させる重要な場になります。

    %p
      潜在的にリリース可能なプロダクト
      
    %p 
      上記の活動を繰り返すことで、潜在的にリリース可能なプロダクトを段階的につくり込み、プロジェクトが終了するまで繰り返します。